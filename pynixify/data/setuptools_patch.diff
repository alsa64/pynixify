diff --git a/setuptools/__init__.py b/setuptools/__init__.py
index a71b2bbd..3dbb72bb 100644
--- a/setuptools/__init__.py
+++ b/setuptools/__init__.py
@@ -135,14 +135,48 @@ def _install_setup_requires(attrs):
     ))
     # Honor setup.cfg's options.
     dist.parse_config_files(ignore_option_errors=True)
-    if dist.setup_requires:
-        dist.fetch_build_eggs(dist.setup_requires)
+    if 'PYPI2NIXKPGS' in os.environ:
+        from pathlib import Path
+        try:
+            out = Path(os.environ['out'])
+        except KeyError:
+            print("out environment variable not defined")
+            sys.exit(1)
+        setup_requires = dist.setup_requires
+        install_requires = dist.install_requires
+        targets = [
+            ('setup_requires.txt', attrs.get('setup_requires', setup_requires)),
+            ('install_requires.txt', attrs.get('install_requires', install_requires)),
+            ('tests_requires.txt', attrs.get('tests_require', [])),
+        ]
+        for (filename, requirements) in targets:
+            with (out / filename).open("w") as fp:
+                if isinstance(requirements, str):
+                    # According to setuptools docs:
+                    # It should be a string or list of strings specifying what
+                    # other distributions need to be present for the packageâ€™s
+                    # tests to run
+                    fp.write(requirements)
+                else:
+                    fp.write('\n'.join(requirements))
 
+        import json
+        meta = {}
+        meta_attrs = {'description', 'url', 'license'}
+        for meta_attr in meta_attrs:
+            meta[meta_attr] = attrs.get(meta_attr)
+        with (out / 'meta.json').open('w') as fp:
+            json.dump(meta, fp)
+    else:
+        if dist.setup_requires:
+            dist.fetch_build_eggs(dist.setup_requires)
 
-def setup(**attrs):
+
+def setup( **attrs):
     # Make sure we have any requirements needed to interpret 'attrs'.
     _install_setup_requires(attrs)
-    return distutils.core.setup(**attrs)
+    if 'PYPI2NIXKPGS' not in os.environ:
+        return distutils.core.setup(**attrs)
 
 setup.__doc__ = distutils.core.setup.__doc__
 
