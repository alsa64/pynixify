diff --git a/src/pip/_internal/commands/install.py b/src/pip/_internal/commands/install.py
index 29907645c..ae0bb944a 100644
--- a/src/pip/_internal/commands/install.py
+++ b/src/pip/_internal/commands/install.py
@@ -413,12 +413,11 @@ class InstallCommand(RequirementCommand):
                 for r in requirement_set.requirements.values()
                 if should_build_for_install_command(r, check_binary_allowed)
             ]
-
             _, build_failures = build(
                 reqs_to_build,
                 wheel_cache=wheel_cache,
                 verify=True,
-                build_options=[],
+                build_options=[options.config_settings],
                 global_options=[],
             )
 
diff --git a/src/pip/_internal/operations/build/metadata.py b/src/pip/_internal/operations/build/metadata.py
index e2b7b4445..cd144e024 100644
--- a/src/pip/_internal/operations/build/metadata.py
+++ b/src/pip/_internal/operations/build/metadata.py
@@ -15,7 +15,7 @@ from pip._internal.utils.temp_dir import TempDirectory
 
 
 def generate_metadata(
-    build_env: BuildEnvironment, backend: Pep517HookCaller, details: str
+        build_env: BuildEnvironment, backend: Pep517HookCaller, details: str, config_settings
 ) -> str:
     """Generate metadata using mechanisms described in PEP 517.
 
@@ -32,7 +32,7 @@ def generate_metadata(
         runner = runner_with_spinner_message("Preparing metadata (pyproject.toml)")
         with backend.subprocess_runner(runner):
             try:
-                distinfo_dir = backend.prepare_metadata_for_build_wheel(metadata_dir)
+                distinfo_dir = backend.prepare_metadata_for_build_wheel(metadata_dir, config_settings)
             except InstallationSubprocessError as error:
                 raise MetadataGenerationFailed(package_details=details) from error
 
diff --git a/src/pip/_internal/operations/build/wheel.py b/src/pip/_internal/operations/build/wheel.py
index b0d2fc9ea..767966e66 100644
--- a/src/pip/_internal/operations/build/wheel.py
+++ b/src/pip/_internal/operations/build/wheel.py
@@ -14,6 +14,7 @@ def build_wheel_pep517(
     backend: Pep517HookCaller,
     metadata_directory: str,
     tempd: str,
+    config_settings,
 ) -> Optional[str]:
     """Build one InstallRequirement using the PEP 517 build process.
 
@@ -24,12 +25,13 @@ def build_wheel_pep517(
         logger.debug("Destination directory: %s", tempd)
 
         runner = runner_with_spinner_message(
-            f"Building wheel for {name} (pyproject.toml)"
+            f"Emmett is Building wheel for {name} (pyproject.toml)"
         )
         with backend.subprocess_runner(runner):
             wheel_name = backend.build_wheel(
                 tempd,
                 metadata_directory=metadata_directory,
+                config_settings=config_settings,
             )
     except Exception:
         logger.error("Failed building wheel for %s", name)
diff --git a/src/pip/_internal/req/req_install.py b/src/pip/_internal/req/req_install.py
index a1e376c89..948b092ac 100644
--- a/src/pip/_internal/req/req_install.py
+++ b/src/pip/_internal/req/req_install.py
@@ -534,6 +534,7 @@ class InstallRequirement:
                     build_env=self.build_env,
                     backend=self.pep517_backend,
                     details=details,
+                    config_settings=self.config_settings,
                 )
         else:
             self.metadata_directory = generate_metadata_legacy(
diff --git a/src/pip/_internal/wheel_builder.py b/src/pip/_internal/wheel_builder.py
index 77a17ff0f..f9550055c 100644
--- a/src/pip/_internal/wheel_builder.py
+++ b/src/pip/_internal/wheel_builder.py
@@ -264,6 +264,7 @@ def _build_one_inside_env(
                     backend=req.pep517_backend,
                     metadata_directory=req.metadata_directory,
                     tempd=temp_dir.path,
+                    config_settings=req.config_settings,
                 )
         else:
             wheel_path = build_wheel_legacy(
diff --git a/src/pip/_vendor/pep517/wrappers.py b/src/pip/_vendor/pep517/wrappers.py
index e031ed708..a55dc3770 100644
--- a/src/pip/_vendor/pep517/wrappers.py
+++ b/src/pip/_vendor/pep517/wrappers.py
@@ -205,6 +205,8 @@ class Pep517HookCaller(object):
         """
         if metadata_directory is not None:
             metadata_directory = abspath(metadata_directory)
+        if config_settings is not None:
+            raise Exception
         return self._call_hook('build_wheel', {
             'wheel_directory': abspath(wheel_directory),
             'config_settings': config_settings,
