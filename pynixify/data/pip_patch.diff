diff --git a/src/pip/_internal/commands/install.py b/src/pip/_internal/commands/install.py
index 29907645c..ae0bb944a 100644
--- a/src/pip/_internal/commands/install.py
+++ b/src/pip/_internal/commands/install.py
@@ -413,12 +413,11 @@ class InstallCommand(RequirementCommand):
                 for r in requirement_set.requirements.values()
                 if should_build_for_install_command(r, check_binary_allowed)
             ]
-
             _, build_failures = build(
                 reqs_to_build,
                 wheel_cache=wheel_cache,
                 verify=True,
-                build_options=[],
+                build_options=[options.config_settings],
                 global_options=[],
             )
 
diff --git a/src/pip/_internal/commands/wheel.py b/src/pip/_internal/commands/wheel.py
index 9dd6c82f2..78ff796c5 100644
--- a/src/pip/_internal/commands/wheel.py
+++ b/src/pip/_internal/commands/wheel.py
@@ -152,11 +152,12 @@ class WheelCommand(RequirementCommand):
                 reqs_to_build.append(req)
 
         # build wheels
+        build_options = dict(list((options.config_settings or {}).items()) + list((options.build_options or {}).items()))
         build_successes, build_failures = build(
             reqs_to_build,
             wheel_cache=wheel_cache,
             verify=(not options.no_verify),
-            build_options=options.build_options or [],
+            build_options=build_options or [], 
             global_options=options.global_options or [],
         )
         for req in build_successes:
diff --git a/src/pip/_internal/operations/build/metadata.py b/src/pip/_internal/operations/build/metadata.py
index e2b7b4445..a184dbc7c 100644
--- a/src/pip/_internal/operations/build/metadata.py
+++ b/src/pip/_internal/operations/build/metadata.py
@@ -15,7 +15,7 @@ from pip._internal.utils.temp_dir import TempDirectory
 
 
 def generate_metadata(
-    build_env: BuildEnvironment, backend: Pep517HookCaller, details: str
+    build_env: BuildEnvironment, backend: Pep517HookCaller, details: str, config_settings
 ) -> str:
     """Generate metadata using mechanisms described in PEP 517.
 
@@ -32,7 +32,7 @@ def generate_metadata(
         runner = runner_with_spinner_message("Preparing metadata (pyproject.toml)")
         with backend.subprocess_runner(runner):
             try:
-                distinfo_dir = backend.prepare_metadata_for_build_wheel(metadata_dir)
+                distinfo_dir = backend.prepare_metadata_for_build_wheel(metadata_dir, config_settings)
             except InstallationSubprocessError as error:
                 raise MetadataGenerationFailed(package_details=details) from error
 
diff --git a/src/pip/_internal/operations/build/wheel.py b/src/pip/_internal/operations/build/wheel.py
index b0d2fc9ea..fafa8a8ac 100644
--- a/src/pip/_internal/operations/build/wheel.py
+++ b/src/pip/_internal/operations/build/wheel.py
@@ -14,6 +14,7 @@ def build_wheel_pep517(
     backend: Pep517HookCaller,
     metadata_directory: str,
     tempd: str,
+    config_settings,
 ) -> Optional[str]:
     """Build one InstallRequirement using the PEP 517 build process.
 
@@ -30,6 +31,7 @@ def build_wheel_pep517(
             wheel_name = backend.build_wheel(
                 tempd,
                 metadata_directory=metadata_directory,
+                config_settings=config_settings,
             )
     except Exception:
         logger.error("Failed building wheel for %s", name)
diff --git a/src/pip/_internal/req/req_install.py b/src/pip/_internal/req/req_install.py
index a1e376c89..948b092ac 100644
--- a/src/pip/_internal/req/req_install.py
+++ b/src/pip/_internal/req/req_install.py
@@ -534,6 +534,7 @@ class InstallRequirement:
                     build_env=self.build_env,
                     backend=self.pep517_backend,
                     details=details,
+                    config_settings=self.config_settings,
                 )
         else:
             self.metadata_directory = generate_metadata_legacy(
diff --git a/src/pip/_internal/wheel_builder.py b/src/pip/_internal/wheel_builder.py
index 77a17ff0f..ef1009dba 100644
--- a/src/pip/_internal/wheel_builder.py
+++ b/src/pip/_internal/wheel_builder.py
@@ -257,6 +257,7 @@ def _build_one_inside_env(
                     backend=req.pep517_backend,
                     metadata_directory=req.metadata_directory,
                     tempd=temp_dir.path,
+                    config_settings=build_options,
                 )
             else:
                 wheel_path = build_wheel_pep517(
@@ -264,6 +265,7 @@ def _build_one_inside_env(
                     backend=req.pep517_backend,
                     metadata_directory=req.metadata_directory,
                     tempd=temp_dir.path,
+                    config_settings=build_options,
                 )
         else:
             wheel_path = build_wheel_legacy(
diff --git a/src/pip/_vendor/pep517/in_process/_in_process.py b/src/pip/_vendor/pep517/in_process/_in_process.py
index 954a4ab05..03299cdbc 100644
--- a/src/pip/_vendor/pep517/in_process/_in_process.py
+++ b/src/pip/_vendor/pep517/in_process/_in_process.py
@@ -253,11 +253,6 @@ def build_wheel(wheel_directory, config_settings, metadata_directory=None):
     prepare_metadata_for_build_wheel fallback, this
     will copy it rather than rebuilding the wheel.
     """
-    prebuilt_whl = _find_already_built_wheel(metadata_directory)
-    if prebuilt_whl:
-        shutil.copy2(prebuilt_whl, wheel_directory)
-        return os.path.basename(prebuilt_whl)
-
     return _build_backend().build_wheel(wheel_directory, config_settings,
                                         metadata_directory)
 
