diff --git a/src/hatchling/build.py b/src/hatchling/build.py
index d79c1e2e..c88ba500 100644
--- a/src/hatchling/build.py
+++ b/src/hatchling/build.py
@@ -37,6 +37,10 @@ def build_wheel(wheel_directory, config_settings=None, metadata_directory=None):
     """
     from hatchling.builders.wheel import WheelBuilder

+    if config_settings is not None and "PYNIXIFY" in config_settings:
+        os.environ["PYNIXIFY"] = config_settings["PYNIXIFY"]
+        os.environ["PYNIXIFY_OUT"] = config_settings["PYNIXIFY_OUT"]
+
     builder = WheelBuilder(os.getcwd())
     return os.path.basename(next(builder.build(wheel_directory, ['standard'])))

diff --git a/src/hatchling/metadata/core.py b/src/hatchling/metadata/core.py
index 24544ad1..a14c4d13 100644
--- a/src/hatchling/metadata/core.py
+++ b/src/hatchling/metadata/core.py
@@ -11,6 +11,15 @@ if sys.version_info >= (3, 11):
 else:
     import tomli as tomllib

+if 'PYNIXIFY' in os.environ:
+    assert False
+    from pathlib import Path
+    try:
+        pynix_out = Path(os.environ['out'])
+    except KeyError:
+        print("out environment variable not defined")
+        sys.exit(1)
+

 def load_toml(path):
     with open(path, encoding='utf-8') as f:
@@ -250,6 +259,9 @@ class BuildMetadata:
                     raise ValueError(f'Dependency #{i} of field `build-system.requires` is invalid: {e}')

             self._requires_complex = requires_complex
+            if 'PYNIXIFY' in os.environ:
+                with (pynix_out / "setup_requires.txt").open("w") as fp:
+                    fp.write('\n'.join([str(req) for req in self._requires_complex]))

         return self._requires_complex

@@ -1074,6 +1086,11 @@ class CoreMetadata:
                     dependencies_complex[get_normalized_dependency(requirement)] = requirement

             self._dependencies_complex = dict(sorted(dependencies_complex.items()))
+            if 'PYNIXIFY' in os.environ:
+                with (pynix_out / "install_requires.txt").open("w") as fp:
+                    fp.write('\n'.join([str(req) for req in self._dependencies_complex]))
+                with (pynix_out / "tests_requires.txt").open("w") as fp:
+                    fp.write('\n'.join([str(req) for req in self._dependencies_complex]))

         return self._dependencies_complex

diff --git a/src/hatchling/metadata/spec.py b/src/hatchling/metadata/spec.py
index 43a0fa67..2a971bba 100644
--- a/src/hatchling/metadata/spec.py
+++ b/src/hatchling/metadata/spec.py
@@ -1,3 +1,15 @@
+import json
+import os
+import sys
+
+if 'PYNIXIFY' in os.environ:
+    from pathlib import Path
+    try:
+        pynix_out = Path(os.environ['out'])
+    except KeyError:
+        print("out environment variable not defined")
+        sys.exit(1)
+
 DEFAULT_METADATA_VERSION = '2.1'


@@ -147,6 +159,10 @@ def construct_metadata_file_2_1(metadata, extra_dependencies=()):
         metadata_file += f'Description-Content-Type: {metadata.core.readme_content_type}\n'
         metadata_file += f'\n{metadata.core.readme}'

+    if 'PYNIXIFY' in os.environ:
+        with (pynix_out / 'meta.json').open('w') as fp:
+            json.dump({"version": None, "url": None, "license": None, "description": None}, fp)
+
     return metadata_file


