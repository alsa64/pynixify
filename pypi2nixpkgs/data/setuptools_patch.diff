diff --git a/setuptools/__init__.py b/setuptools/__init__.py
index a71b2bbd..5e7f7843 100644
--- a/setuptools/__init__.py
+++ b/setuptools/__init__.py
@@ -139,10 +139,35 @@ def _install_setup_requires(attrs):
         dist.fetch_build_eggs(dist.setup_requires)
 
 
-def setup(**attrs):
-    # Make sure we have any requirements needed to interpret 'attrs'.
-    _install_setup_requires(attrs)
-    return distutils.core.setup(**attrs)
+def setup( **attrs):
+    if 'PYPI2NIXKPGS' in os.environ:
+        from pathlib import Path
+        try:
+            out = Path(os.environ['out'])
+        except KeyError:
+            print("out environment variable not defined")
+            sys.exit(1)
+        targets = [
+            ('setup_requires.txt', attrs.get('setup_requires', [])),
+            ('install_requires.txt', attrs.get('install_requires', [])),
+            ('tests_requires.txt', attrs.get('tests_require', [])),
+        ]
+        for (filename, requirements) in targets:
+            with (out / filename).open("w") as fp:
+                if isinstance(requirements, list):
+                    fp.write('\n'.join(requirements))
+                elif isinstance(requirements, str):
+                    # According to setuptools docs:
+                    # It should be a string or list of strings specifying what
+                    # other distributions need to be present for the packageâ€™s
+                    # tests to run
+                    fp.write(requirements)
+                else:
+                    raise TypeError(f'Invalid value: {requirements}')
+    else:
+        # Make sure we have any requirements needed to interpret 'attrs'.
+        _install_setup_requires(attrs)
+        return distutils.core.setup(**attrs)
 
 setup.__doc__ = distutils.core.setup.__doc__
 
